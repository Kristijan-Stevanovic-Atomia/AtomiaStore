@* This is a fallback if for some reason an error has not been caught by client-side validation. *@

@model System.Web.Mvc.ModelStateDictionary

@{
    var formHasErrors = Model.Any(x => x.Value.Errors.Count > 0);
    int i = 0;
}

@if (formHasErrors)
{
    <div class="warning">
        <ul>
            @foreach (var kv in Model.Where(x => x.Value.Errors.Count > 0))
            {
                string errorMessage = string.IsNullOrEmpty(Html.Resource("CustomerValidation, " + kv.Key.Split('.').Last())) ? Html.CommonResource("Error" + kv.Key.Split('.').Last()) : Html.Resource("CustomerValidation, " + kv.Key.Split('.').Last());
                <li><strong>@Html.CommonResource(kv.Key.Split('.').Last()):</strong> @String.Join(", ", string.IsNullOrEmpty(errorMessage) ? kv.Value.Errors.Select(e => e.ErrorMessage).ElementAt(i) : errorMessage)</li>
                i++;
            }
        </ul>
    </div>
}
